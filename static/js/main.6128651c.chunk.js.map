{"version":3,"sources":["consts/buttonTypes.js","store.js","consts/actionTypes.js","reducers/rootReducer.js","components/ExpressionScreen.js","actions/pressButtonAction.js","components/Button.js","components/Frame.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","CLEAR","DELETE","DIVIDE","MULTIPLY","SEVEN","EIGHT","NINE","SUBTRACT","FOUR","FIVE","SIX","ADD","ONE","TWO","THREE","EQUALS","ZERO","DECIMAL","buttonMap","Map","defaultState","redux__WEBPACK_IMPORTED_MODULE_0__","_reducers_rootReducer__WEBPACK_IMPORTED_MODULE_1__","ButtonTypes","store","Redux","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","PRESS_BUTTON","CHARACTERS_LIMIT","state","action","type","buttonId","newState","Object","G_Projects_calculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","pop","length","isNumberButton","isOperationButton","slice","push","lastOperationIndex","lastIndexOfAny","lastOperand","includes","stringExpression","reduce","acc","el","get","console","log","resultExpression","eval","toString","split","concat","getKeyByValue","map","value","keys","find","key","where","what","Math","max","lastIndexOf","style","background","borderRadius","gridColumn","gridRow","fontFamily","fontSize","textAlign","marginBottom","paddingRight","paddingTop","verticalAlign","ExpressionScreen","props","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","id","expression","Component","connect","pressButton","dispatch","Button","_this","buttonStyle","color","column","undefined","columnSpan","row","rowSpan","onClick","bind","assertThisInitialized","e","target","defaultProps","pressButtonAction","frameStyle","width","height","margin","display","padding","gridTemplateColumns","gridTemplateRows","gridColumnGap","gridRowGap","Frame","components_ExpressionScreen","components_Button","App","es","className","components_Frame","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6128651c.chunk.js","sourcesContent":["export const CLEAR = 'clear';\r\nexport const DELETE = 'delete';\r\nexport const DIVIDE = 'divide';\r\nexport const MULTIPLY = 'multiply';\r\n\r\nexport const SEVEN = 'seven';\r\nexport const EIGHT = 'eight';\r\nexport const NINE = 'nine';\r\nexport const SUBTRACT = 'subtract';\r\n\r\nexport const FOUR = 'four';\r\nexport const FIVE = 'five';\r\nexport const SIX = 'six';\r\nexport const ADD = 'add';\r\n\r\nexport const ONE = 'one';\r\nexport const TWO = 'two';\r\nexport const THREE = 'three';\r\nexport const EQUALS = 'equals';\r\n\r\nexport const ZERO = 'zero';\r\nexport const DECIMAL = 'decimal';\r\n\r\nexport const buttonMap = new Map([\r\n    [CLEAR, 'C'],\r\n    [DELETE, '‚Üê'],\r\n    [DIVIDE, '/'],\r\n    [MULTIPLY, '*'],\r\n    [SEVEN, '7'],\r\n    [EIGHT, '8'],\r\n    [NINE, '9'],\r\n    [SUBTRACT, '-'],\r\n    [FOUR, '4'],\r\n    [FIVE, '5'],\r\n    [SIX, '6'],\r\n    [ADD, '+'],\r\n    [ONE, '1'],\r\n    [TWO, '2'],\r\n    [THREE, '3'],\r\n    [EQUALS, '='],\r\n    [ZERO, '0'],\r\n    [DECIMAL, '.']\r\n]);\r\n","import * as Redux from 'redux';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\nimport * as ButtonTypes from './consts/buttonTypes';\r\n\r\n//export const defaultState = [ButtonTypes.buttonMap.get(ButtonTypes.ZERO)];\r\nexport const defaultState = [ ButtonTypes.ZERO ];\r\n\r\nconst store = Redux.createStore(rootReducer, defaultState, Redux.compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\r\n\r\nexport default store;","export const PRESS_BUTTON = 'PRESS_BUTTON';","import  {defaultState} from '../store';\r\nimport {PRESS_BUTTON} from '../consts/actionTypes';\r\nimport * as ButtonTypes from '../consts/buttonTypes';\r\nimport  {buttonMap} from '../consts/buttonTypes';\r\n\r\nconst CHARACTERS_LIMIT = 14;\r\n\r\n\r\nexport default function(state, action){\r\n    switch(action.type){\r\n        case PRESS_BUTTON:\r\n\r\n            if (action.buttonId === ButtonTypes.CLEAR){\r\n                return defaultState;    \r\n            }\r\n\r\n            let newState = [...state];\r\n\r\n            if (action.buttonId === ButtonTypes.DELETE){\r\n                newState.pop();\r\n                if (newState.length === 0){\r\n                    return defaultState;\r\n                }\r\n                if (newState.length === 1 && !isNumberButton(newState[0])){\r\n                    return defaultState;\r\n                }\r\n                return newState;\r\n            }\r\n\r\n            if (isOperationButton(action.buttonId)){\r\n                if (isOperationButton(newState.slice(-1)[0])){\r\n                    newState.pop();\r\n                }\r\n                newState.push(action.buttonId);\r\n                return newState;\r\n            }\r\n\r\n            if (isNumberButton(action.buttonId)){\r\n                if (newState.length === 1 && newState[0] === ButtonTypes.ZERO){\r\n                    newState.pop();\r\n                }\r\n                newState.push(action.buttonId);\r\n                return newState;\r\n            }\r\n\r\n            if (action.buttonId === ButtonTypes.DECIMAL){\r\n                if (isOperationButton(newState.slice(-1)[0])){\r\n                    newState.push(ButtonTypes.ZERO);\r\n                    newState.push(action.buttonId);\r\n                    return newState;\r\n                }\r\n                let lastOperationIndex = lastIndexOfAny(state, [ButtonTypes.DIVIDE, ButtonTypes.MULTIPLY, ButtonTypes.SUBTRACT, ButtonTypes.ADD])\r\n                let lastOperand = state;\r\n                if (lastOperationIndex > -1){\r\n                    lastOperand = state.slice(lastOperationIndex + 1);\r\n                }\r\n                if (lastOperand.includes(ButtonTypes.DECIMAL)){\r\n                    return state;\r\n                }\r\n                \r\n                newState.push(action.buttonId);\r\n                return newState;\r\n            }\r\n\r\n            if (action.buttonId === ButtonTypes.EQUALS){\r\n                let stringExpression = state.reduce((acc,el) => acc + buttonMap.get(el), '');\r\n                console.log(stringExpression);\r\n                let resultExpression = eval(stringExpression).toString();\r\n                console.log(resultExpression);\r\n\r\n                return resultExpression.split('').reduce((acc,el) => acc.concat([getKeyByValue(buttonMap, el)]), []).slice(0, CHARACTERS_LIMIT);\r\n            }\r\n            \r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst isNumberButton = buttonId => buttonId === ButtonTypes.ZERO \r\n                            || buttonId === ButtonTypes.ONE\r\n                            || buttonId === ButtonTypes.TWO\r\n                            || buttonId === ButtonTypes.THREE\r\n                            || buttonId === ButtonTypes.FOUR\r\n                            || buttonId === ButtonTypes.FIVE\r\n                            || buttonId === ButtonTypes.SIX\r\n                            || buttonId === ButtonTypes.SEVEN\r\n                            || buttonId === ButtonTypes.EIGHT\r\n                            || buttonId === ButtonTypes.NINE;\r\n\r\nconst isOperationButton = buttonId => buttonId === ButtonTypes.DIVIDE\r\n                            || buttonId === ButtonTypes.MULTIPLY\r\n                            || buttonId === ButtonTypes.SUBTRACT\r\n                            || buttonId === ButtonTypes.ADD;\r\n\r\nfunction getKeyByValue(map, value) {\r\n    return [...map.keys()].find(key => map.get(key) === value);\r\n}                            \r\n\r\nfunction lastIndexOfAny(where, what){\r\n    return what.reduce((acc,el) => Math.max(acc, where.lastIndexOf(el)), -1);\r\n}\r\n\r\n                            \r\n                            ","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport * as ButtonTypes from '../consts/buttonTypes';\r\n\r\nconst style = {\r\n  background: '#A1AF76',\r\n  borderRadius: '10px',\r\n  gridColumn: '1 / span 4',\r\n  gridRow: '1',\r\n  fontFamily: 'Orbitron',\r\n  fontSize: '25px',\r\n  textAlign: 'right',\r\n  marginBottom: '10px',\r\n  paddingRight: '10px',\r\n  paddingTop: '15px',\r\n  verticalAlign: 'middle'\r\n};\r\n\r\nclass ExpressionScreen extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      //console.log(props);\r\n    }\r\n    render() {\r\n      return (\r\n        <div style={style} id='display'>{this.props.expression}</div>\r\n      );\r\n    }\r\n  }\r\n\r\n  ExpressionScreen.propTypes = {\r\n    expression: PropTypes.array.isRequired\r\n  };\r\n\r\n  const mapStateToProps = state => ({\r\n    expression: state.map(key => ButtonTypes.buttonMap.get(key))\r\n  });\r\n\r\n  export default connect(mapStateToProps, null)(ExpressionScreen);\r\n  \r\n  ","import {PRESS_BUTTON} from '../consts/actionTypes';\r\n\r\nconst pressButton = dispatch => (buttonId) => {\r\n    return dispatch({\r\n        type: PRESS_BUTTON,\r\n        buttonId: buttonId\r\n    })\r\n};\r\n\r\nexport default pressButton;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport pressButtonAction from '../actions/pressButtonAction';\r\nimport  {buttonMap} from '../consts/buttonTypes';\r\n\r\n\r\n\r\nclass Button extends Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n\r\n      this.onClick = this.onClick.bind(this);\r\n    }\r\n  \r\n    buttonStyle = {\r\n      background: this.props.color,\r\n      borderRadius: '3px',\r\n      gridColumn: this.props.column + (this.props.columnSpan != undefined ? ' / span ' + this.props.columnSpan : ''),\r\n      gridRow: this.props.row + (this.props.rowSpan != undefined ? ' / span ' + this.props.rowSpan : ''),\r\n      fontSize: '28px',\r\n      color: '#DDDDDD'\r\n    };\r\n\r\n    onClick(e){\r\n      this.props.pressButton(e.target.id);\r\n    }\r\n\r\n\r\n    render() {\r\n      return (\r\n        <button \r\n          style={this.buttonStyle} \r\n          onClick={this.onClick} \r\n          value={buttonMap.get(this.props.id)}\r\n          id={this.props.id}>\r\n            {buttonMap.get(this.props.id)}\r\n        </button>\r\n      );\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n  color: '#58595B'\r\n};\r\n\r\nButton.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  row: PropTypes.number.isRequired,\r\n  column: PropTypes.number.isRequired,\r\n  rowSpan: PropTypes.number,\r\n  columnSpan: PropTypes.number,\r\n  color: PropTypes.string.isRequired,\r\n  pressButton: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  pressButton: pressButtonAction(dispatch)\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Button);\r\n  \r\n  ","import React, { Component } from 'react';\r\nimport Provider, {connect} from 'react-redux';\r\n\r\nimport ExpressionScreen from './ExpressionScreen';\r\nimport Button from './Button';\r\nimport * as ButtonTypes from '../consts/buttonTypes';\r\n\r\n\r\n\r\nconst frameStyle = {\r\n  background: '#39393b',\r\n  width: '300px',\r\n  height: '400px',\r\n  borderRadius: '15px',\r\n  margin: 'auto',\r\n  display: 'grid',\r\n  padding: '20px',\r\n  gridTemplateColumns: '1fr 1fr 1fr 1fr',\r\n  gridTemplateRows: '1.5fr 1fr 1fr 1fr 1fr 1fr',\r\n  gridColumnGap: '10px',\r\n  gridRowGap: '12px'\r\n};\r\n\r\nclass Frame extends Component {\r\n    render() {\r\n\r\n      return (\r\n        <div style={frameStyle}>\r\n        <ExpressionScreen></ExpressionScreen>\r\n          <Button row={2} column={1} id={ButtonTypes.CLEAR} color='#222222'></Button>\r\n          <Button row={2} column={2} id={ButtonTypes.DELETE} color='#222222'></Button>\r\n          <Button row={2} column={3} id={ButtonTypes.DIVIDE} color='#222222'></Button>\r\n          <Button row={2} column={4} id={ButtonTypes.MULTIPLY} color='#222222'></Button>\r\n\r\n          <Button row={3} column={1} id={ButtonTypes.SEVEN}></Button>\r\n          <Button row={3} column={2} id={ButtonTypes.EIGHT}></Button>\r\n          <Button row={3} column={3} id={ButtonTypes.NINE}></Button>\r\n          <Button row={3} column={4} id={ButtonTypes.SUBTRACT}></Button>\r\n\r\n          <Button row={4} column={1} id={ButtonTypes.FOUR}></Button>\r\n          <Button row={4} column={2} id={ButtonTypes.FIVE}></Button>\r\n          <Button row={4} column={3} id={ButtonTypes.SIX}></Button>\r\n          <Button row={4} column={4} id={ButtonTypes.ADD}></Button>\r\n\r\n          <Button row={5} column={1} id={ButtonTypes.ONE}></Button>\r\n          <Button row={5} column={2} id={ButtonTypes.TWO}></Button>\r\n          <Button row={5} column={3} id={ButtonTypes.THREE}></Button>\r\n          <Button row={5} rowSpan={2} column={4} id={ButtonTypes.EQUALS} color='#F15A2B'></Button>\r\n\r\n          <Button row={6} column={1} columnSpan={2} id={ButtonTypes.ZERO}></Button>\r\n          <Button row={6} column={3} id={ButtonTypes.DECIMAL}></Button>\r\n        \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default connect(null, null)(Frame);\r\n  \r\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\n\nimport Frame from './components/Frame';\n\n\nimport './App.css';\nimport store from './store';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = {store}>\n        <div className=\"App\">\n          <header className=\"App-header\">React & Redux Calculator</header>\n          <Frame></Frame>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}